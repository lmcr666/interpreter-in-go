make age be 2                //let age = 2;
make name be "Monkey"        //let name = "Monkey";
make result be 10 * (20 / 2) //let result = 10 * (20 / 2);

make myArray be [1, 2, 3, 4, 5]; //let myArray = [1, 2, 3, 4, 5];

make thorsten be {"name": "Thorsten", "age": 28}; //let thorsten = {"name": "Thorsten", "age": 28};

myArray[0] // => 1
thorsten["name"] // => "Thorsten"

//let add = fn(a, b) { return a + b; } // or just { a + b; }
make add be fun(a, b) { a + b; }
add(1, 2);

//let fibonacci = fn(x) {
make fibonacci be fun(x) {
  if (x == 0) {
    0
  } else {
    if (x == 1) {
      1
    } else {
      fibonacci(x - 1) + fibonacci(x - 2);
    }
  }
};

//higher order functions

//let twice = fn(f, x) { // takes a function as an argument
make twice be fun()
  give f(f(x));
};


//let addTwo = fn(x) {
make addTwo be fun(x)
  return x + 2;
};
twice(addTwo, 2); // => 6


